name: Auto Release

on:
  push:
    branches: [ main ]
    paths: [ 'pyproject.toml' ]

jobs:
  check-version-bump:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2  # Need previous commit to compare
    
    - name: Check if version changed
      id: version_check
      run: |
        # Get current version
        CURRENT_VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        
        # Get previous version
        git checkout HEAD~1 -- pyproject.toml || true
        PREV_VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/' || echo "0.0.0")
        echo "prev_version=$PREV_VERSION" >> $GITHUB_OUTPUT
        
        # Restore current version
        git checkout HEAD -- pyproject.toml
        
        if [ "$CURRENT_VERSION" != "$PREV_VERSION" ]; then
          echo "version_changed=true" >> $GITHUB_OUTPUT
          echo "Version changed: $PREV_VERSION â†’ $CURRENT_VERSION"
        else
          echo "version_changed=false" >> $GITHUB_OUTPUT
          echo "Version unchanged: $CURRENT_VERSION"
        fi
    
    - name: Create Release
      if: steps.version_check.outputs.version_changed == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=${{ steps.version_check.outputs.current_version }}
        
        # Create tag
        git tag -a "v$VERSION" -m "Release version $VERSION"
        git push origin "v$VERSION"
        
        # Create GitHub Release
        gh release create "v$VERSION" \
          --title "Secret Guardian v$VERSION" \
          --notes "Automated release for version $VERSION" \
          --draft=false
